#!/bin/bash
set -e
home=`dirname $(readlink -e $0)`
source "$home/functions"

declare -A arm_dirs
arm_dirs=(
    [backward]=0 [forward]=1 [stop]=2
)

declare -A delays
delays=(
    [0]=0 [1]=1 [10]=2 [50]=3 [100]=4
)

function help() {
    echoerr "Commands: rotate <arm_dir> | step <steps> | stop | position | enable | disable | set_max <freq> | get_max | set_timer <timer> | set_delay <delay>"
    echoerr "arm_dir: ${!arm_dirs[@]}"
    echoerr "steps: positive/negative integer"
    echoerr "freq, timer: positive 16 bit integer"
    echoerr "delay: 0, 1, 10, 50, 100"
    exit 1
}

if [ $# = 1 -o $# = 2 ]; then
    command=$1
    command_name=tank_arm_$command
    if [ $# = 1 ]; then
        case $command in
            stop | position | enable | disable | get_max) ;;
            *) help ;;
        esac
    elif [ $# = 2 ]; then
        param=$2
        if [ $command == set_timer ]; then
            params=$(param_u16bit $param)
        elif [ $command == set_max ]; then
            params=$(param_u16bit $param)
        elif [ $command == step ]; then
            params=$(param_s32bit $param)
        elif [ $command == rotate ]; then
            arm_dir=${arm_dirs[$param]}
            test -n "$arm_dir" || { echoerr "Unknown arm_dir: $param"; help; }
            params=$(param_enum $arm_dir)
        elif [ $command == set_delay ]; then
            delay=${delays[$param]}
            test -n "$delay" || { echoerr "Unknown delay: $param"; help; }
            params=$(param_enum $delay)
        else
            help
        fi
    fi
else
    help
fi

twi_call $command_name arm $params
